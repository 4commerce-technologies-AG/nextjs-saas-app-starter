{
  "name": "richard",
  "version": "0.1.1",
  "private": true,
  "config": {
    "dotenvDEV": "dotenv -v APP_ENV=development -v NEXT_TELEMETRY_DISABLED=1 -e .env.local -e .env/.env.development.local -e .env/.env.development",
    "dotenvSTAGE": "dotenv -v APP_ENV=stage -v NEXT_TELEMETRY_DISABLED=1 -e .env.local -e .env/.env.staging.local -e .env/.env.staging",
    "dotenvPROD": "dotenv -v APP_ENV=production -v NEXT_TELEMETRY_DISABLED=1 -e .env.local -e .env/.env.production.local -e .env/.env.production",
    "dotenvTEST": "dotenv -v APP_ENV=test -v NEXT_TELEMETRY_DISABLED=1 -e .env.local -e .env/.env.test.local -e .env/.env.test"
  },
  "scripts": {
    "------------------------------------------------- help  ----------------------------------------------": "",
    "help": "cat ./docs/npm-help.md | egrep -v '</?[^<]*>' && echo ''",
    "------------------------------------------------- clean ----------------------------------------------": "",
    "clean": "npm run clean:dev && npm run clean:build && npm run clean:test && npm run clean:sb && npm run clean:doc && npm run clean:cache",
    "clean:dev": "rm -rf ./.next.production/ ./.next.development/ ./.next.stage/ ./.next.test/ && npm run clean:test",
    "clean:build": "rm -rf ./.build.production/ ./.build.development/ ./.build.stage/ ./.build.test/",
    "clean:cache": "rm -rf ./node_modules/.cache",
    "clean:cache:sb": "rm -rf ./node_modules/.cache/storybook",
    "clean:test": "rm -rf $(find ./tests -type d -name '*__snapshots__') && rm -rf ./coverage/",
    "clean:sb": "rm -rf ./.build.storybook && npm run clean:cache:sb",
    "clean:doc": "rm -rf ./docs/api ./docs/_plugins/vars.js",
    "clean:reset": "npm run clean && rm -rf ./node_modules/ && rm -rf ./package-lock.json",
    "------------------------------------------------- dev   ----------------------------------------------": "",
    "dev": "${npm_package_config_dotenvDEV} -v NODE_ENV=development -- next dev",
    "dev:stage": "${npm_package_config_dotenvSTAGE} -v NODE_ENV=development -- next dev",
    "dev:prod": "${npm_package_config_dotenvPROD} -v NODE_ENV=development -- next dev",
    "dev:test": "${npm_package_config_dotenvTEST} -v NODE_ENV=test -- next dev",
    "------------------------------------------------- debug ----------------------------------------------": "",
    "debug": "NODE_OPTIONS='--inspect' ${npm_package_config_dotenvDEV} -v NODE_ENV=development -- next dev",
    "debug:stage": "NODE_OPTION='--inspect' ${npm_package_config_dotenvSTAGE} -v NODE_ENV=development -- next dev",
    "debug:prod": "NODE_OPTION='--inspect' ${npm_package_config_dotenvPROD} -v NODE_ENV=development -- next dev",
    "debug:test": "NODE_OPTION='--inspect' ${npm_package_config_dotenvTEST} -v NODE_ENV=test -- next dev",
    "------------------------------------------------- build ----------------------------------------------": "",
    "build": "echo 'You have to select an environment for this built like build:prod'",
    "build:dev": "rm -rf ./.build.next/ && ${npm_package_config_dotenvDEV} -v NODE_ENV=production -- next build --no-lint",
    "build:stage": "rm -rf ./.build.next/ && ${npm_package_config_dotenvSTAGE} -v NODE_ENV=production -- next build --no-lint",
    "build:prod": "rm -rf ./.build.next/ && ${npm_package_config_dotenvPROD} -v NODE_ENV=production -- next build --no-lint",
    "build:test": "rm -rf ./.build.next/ && ${npm_package_config_dotenvTEST} -v NODE_ENV=test -- next build --no-lint",
    "------------------------------------------------- start ----------------------------------------------": "",
    "start": "echo 'You have to select an environment for this start like start:prod'",
    "start:dev": "${npm_package_config_dotenvDEV} -v NODE_ENV=production -- next start",
    "start:stage": "${npm_package_config_dotenvSTAGE} -v NODE_ENV=production -- next start",
    "start:prod": "${npm_package_config_dotenvPROD} -v NODE_ENV=production -- next start",
    "start:test": "${npm_package_config_dotenvTEST} -v NODE_ENV=test -- next start",
    "------------------------------------------------- dist  ----------------------------------------------": "",
    "dist:dev": "tar -cvzf ./DEV-DIST-$(date '+%Y-%m-%d_%H-%M_')${npm_package_name}_${npm_package_version}.tgz ./.build.development ./public ./package.json ./next.config.js ./i18n.config.js ./i18n.js ./.env/.env.development",
    "dist:stage": "tar -cvzf ./STAGE-DIST-$(date '+%Y-%m-%d_%H-%M_')${npm_package_name}_${npm_package_version}.tgz ./.build.stage ./public ./package.json ./next.config.js ./i18n.config.js ./i18n.js ./.env/.env.staging",
    "dist:prod": "tar -cvzf ./PROD-DIST-$(date '+%Y-%m-%d_%H-%M_')${npm_package_name}_${npm_package_version}.tgz ./.build.production ./public ./package.json ./next.config.js ./i18n.config.js ./i18n.js ./.env/.env.production",
    "dist:test": "tar -cvzf ./TEST-DIST-$(date '+%Y-%m-%d_%H-%M_')${npm_package_name}_${npm_package_version}.tgz ./.build.test ./public ./package.json ./next.config.js ./i18n.config.js ./i18n.js ./.env/.env.test",
    "------------------------------------------------- exec  ----------------------------------------------": "",
    "exec:dev": "${npm_package_config_dotenvDEV} -v NODE_ENV=development -- ./.bin/exec_node_script.sh npm",
    "exec:stage": "${npm_package_config_dotenvSTAGE} -v NODE_ENV=development -- ./.bin/exec_node_script.sh npm",
    "exec:prod": "${npm_package_config_dotenvPROD} -v NODE_ENV=production -- ./.bin/exec_node_script.sh npm",
    "exec:test": "${npm_package_config_dotenvTEST} -v NODE_ENV=test -- ./.bin/exec_node_script.sh npm",
    "------------------------------------------------- lint  ----------------------------------------------": "",
    "eslint": "eslint",
    "lint": "eslint",
    "lint:fix": "eslint --fix",
    "lint:all": "eslint ./imports ./pages",
    "lint:all:fix": "eslint ./imports ./pages --fix",
    "------------------------------------------------- fmt   ----------------------------------------------": "",
    "prettier": "prettier",
    "fmt": "prettier --check",
    "fmt:fix": "prettier --write",
    "fmt:all": "prettier --check \"./{imports,pages,stories,tests}/**/*.{ts,js,tsx,jsx}\"",
    "fmt:all:fix": "prettier --write \"./{imports,pages,stories,tests}/**/*.{ts,js,tsx,jsx}\"",
    "------------------------------------------------- check ----------------------------------------------": "",
    "code-review:all": "npm run lint:all && npm run fmt:all",
    "code-review:all:fix": "npm run lint:all:fix && npm run fmt:all:fix",
    "------------------------------------------------- test  ----------------------------------------------": "",
    "test": "APP_DISABLE_DEBUG_LOG=1 jest",
    "test:no-cache": "APP_DISABLE_DEBUG_LOG=1 jest --no-cache --updateSnapshot",
    "test:watch": "APP_DISABLE_DEBUG_LOG=1 jest --watch",
    "test:coverage": "APP_DISABLE_DEBUG_LOG=1 jest --coverage",
    "------------------------------------------------- story ----------------------------------------------": "",
    "sb": "${npm_package_config_dotenvDEV} -v NODE_ENV=development -v APP_DISABLE_DEBUG_LOG=1 -- start-storybook --no-open --modern --no-manager-cache --port 6006",
    "sb:build": "APP_DISABLE_DEBUG_LOG=1 build-storybook --modern --no-manager-cache --output-dir ./.build.storybook",
    "sb:build:docs": "APP_DISABLE_DEBUG_LOG=1 build-storybook --modern --no-manager-cache --docs --output-dir ./.build.storybook",
    "------------------------------------------------- doc   ----------------------------------------------": "",
    "doc:serve": "npm run --silent doc:update && docsify serve ./docs --port 6060",
    "doc:build": "npm run --silent doc:vars:update && npm run --silent doc:api:build",
    "doc:update": "npm run --silent doc:vars:update && npm run --silent doc:api:update",
    "doc:vars:update": "npm run exec:dev -- ./utils/doc/package-vars-to-docsify.jsx",
    "doc:api:build": "npm run doc:api:update -- --clear",
    "doc:api:update": "npm run exec:dev -- ./utils/doc/jsdoc-to-docsify.jsx --config jsdoc.json --path imports/ pages/ stories/ tests/",
    "------------------------------------------------ install ---------------------------------------------": "",
    "install:prod": "NODE_ENV=production npm install ; next telemetry disable",
    "install:dev": "NODE_ENV=development npm install ; next telemetry disable",
    "install:npm": "npm install --save-exact",
    "install:outdated": "npx --yes npm-check --skip-unused",
    "install:upgrade": "npx --yes npm-check --skip-unused --update --save-exact",
    "install:verify": "npm run code-review:all ; npm run clean:test && npm run test:no-cache"
  },
  "dependencies": {
    "@emotion/cache": "11.7.1",
    "@emotion/react": "11.9.0",
    "@emotion/server": "11.4.0",
    "@emotion/styled": "11.8.1",
    "@fontsource/roboto": "4.5.5",
    "@mui/icons-material": "5.6.2",
    "@mui/lab": "5.0.0-alpha.76",
    "@mui/material": "5.6.3",
    "@mui/styles": "5.6.2",
    "commander": "9.2.0",
    "date-fns": "2.28.0",
    "deepmerge": "4.2.2",
    "dotenv-cli": "5.1.0",
    "import-jsx": "4.0.1",
    "ink": "3.2.0",
    "next": "12.1.5",
    "next-auth": "4.3.1",
    "node-cache": "5.1.2",
    "nodemailer": "6.7.3",
    "prop-types": "15.8.1",
    "react": "17.0.2 && <18",
    "react-dom": "17.0.2 && <18",
    "react-hook-form": "7.30.0",
    "react-hook-form-mui": "3.2.1",
    "react-tracked": "1.7.9"
  },
  "devDependencies": {
    "@babel/core": "7.17.9",
    "@storybook/addon-actions": "6.4.22",
    "@storybook/addon-controls": "6.4.22",
    "@storybook/addon-docs": "6.4.22",
    "@storybook/addon-essentials": "6.4.22",
    "@storybook/addon-interactions": "6.4.22",
    "@storybook/addon-links": "6.4.22",
    "@storybook/builder-webpack5": "6.4.22",
    "@storybook/manager-webpack5": "6.4.22",
    "@storybook/preset-scss": "1.0.3",
    "@storybook/react": "6.4.22",
    "@storybook/testing-library": "0.0.11",
    "@testing-library/jest-dom": "5.16.4",
    "@testing-library/react": "12.1.4 && <13",
    "@testing-library/user-event": "14.1.1",
    "@types/jest": "27.4.1",
    "@types/node": "17.0.29",
    "@types/react": "17.0.43 && <18",
    "@typescript-eslint/eslint-plugin": "5.21.0",
    "@typescript-eslint/parser": "5.21.0",
    "@typescript-eslint/typescript-estree": "5.21.0",
    "babel-jest": "28.0.2",
    "babel-loader": "8.2.5",
    "css-loader": "6.7.1",
    "docsify-cli": "4.4.4",
    "eslint": "8.14.0",
    "eslint-config-airbnb": "19.0.4",
    "eslint-config-next": "12.1.5",
    "eslint-config-prettier": "8.5.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-mui-unused-classes": "github:4commerce-technologies-AG/eslint-plugin-material-ui-unused-classes",
    "eslint-plugin-prettier": "4.0.0",
    "eslint-plugin-storybook": "0.5.11",
    "identity-obj-proxy": "3.0.0",
    "jest": "28.0.2",
    "jest-environment-jsdom": "28.0.2",
    "jest-transform-yaml": "1.0.0",
    "jest-watch-typeahead": "1.1.0",
    "js-yaml": "4.1.0",
    "jsdoc-babel": "0.5.0",
    "jsdoc-to-markdown": "7.1.1",
    "next-multilingual-alternate": "github:4commerce-technologies-AG/next-multilingual-alternate#0.10.3-stable",
    "prettier": "2.6.2",
    "react-test-renderer": "17.0.2 && <18",
    "sass": "1.51.0",
    "sass-loader": "12.6.0",
    "storybook-addon-next-router": "3.1.1",
    "style-loader": "3.3.1",
    "typescript": "4.6.3",
    "yaml-loader": "0.8.0"
  }
}
